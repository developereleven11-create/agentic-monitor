name: Scheduler Health

on:
  schedule:
    - cron: '*/15 * * * *'     # same cadence as Monitor (UTC)
  workflow_dispatch: {}

jobs:
  tick:
    runs-on: ubuntu-latest
    env:
      REPO: ${{ github.repository }}
      REF: ${{ github.ref }}
      BRANCH_NAME: ${{ github.ref_name }}
      TOKEN: ${{ secrets.GITHUB_TOKEN }}
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
    steps:
      - name: Show timestamps
        run: |
          echo "UTC: $(date -u '+%Y-%m-%d %H:%M:%S')"
          echo "IST: $(TZ='Asia/Kolkata' date '+%Y-%m-%d %H:%M:%S')"
          echo "Event: ${{ github.event_name }}"

      - name: Checkout (no external actions)
        run: |
          set -e
          rm -rf repo
          mkdir repo
          cd repo
          git init
          git config --global advice.detachedHead false
          git remote add origin "https://x-access-token:${TOKEN}@github.com/${REPO}.git"
          git fetch --depth=1 origin "${REF}"
          git checkout -f FETCH_HEAD

      - name: Determine minutes since last Monitor run
        id: age
        working-directory: repo
        run: |
          set -e
          # Default -1 means "no data"
          AGE_MIN=-1
          if [ -f runs/index.json ]; then
            # Use Node to compute age of latest run (startedAt OR id fallback)
            AGE_MIN=$(node -e 'const fs=require("fs");
              const f="runs/index.json";
              try{
                const a=JSON.parse(fs.readFileSync(f,"utf8"));
                if(!Array.isArray(a)||!a.length){console.log(-1);process.exit(0)}
                const ts=a[0]?.log?.startedAt || a[0]?.id;
                const t=Date.parse(ts)||Number(ts);
                if(!t){console.log(-1);process.exit(0)}
                console.log(Math.floor((Date.now()-t)/60000));
              }catch(e){console.log(-1)}')
          fi
          echo "AGE_MIN=$AGE_MIN" | tee -a $GITHUB_OUTPUT
          echo "Minutes since last monitor run: $AGE_MIN"

      - name: Auto-trigger Monitor if stale (>20 min)
        if: ${{ steps.age.outputs.AGE_MIN == '' || fromJSON(steps.age.outputs.AGE_MIN) > 20 || fromJSON(steps.age.outputs.AGE_MIN) == -1 }}
        run: |
          set -e
          echo "Triggering Monitor via workflow_dispatch on branch ${BRANCH_NAME}..."
          curl -sS -L -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${TOKEN}" \
            https://api.github.com/repos/${REPO}/actions/workflows/monitor.yml/dispatches \
            -d "{\"ref\":\"${BRANCH_NAME}\"}"
          echo "Dispatched."

      - name: Optional Slack ping
        if: ${{ env.SLACK_WEBHOOK_URL != '' }}
        run: |
          if [ -n "$SLACK_WEBHOOK_URL" ]; then
            NOW_UTC=$(date -u '+%Y-%m-%d %H:%M:%S')
            AGE="${{ steps.age.outputs.AGE_MIN }}"
            curl -sS -X POST -H 'Content-type: application/json' \
              --data "{\"text\":\"ðŸ•’ Scheduler Health: ${NOW_UTC} UTC â€¢ last monitor age=${AGE} min\"}" \
              "$SLACK_WEBHOOK_URL" >/dev/null
          fi
