name: Monitor

on:
  schedule:
    - cron: '*/15 * * * *'   # every 15 minutes (UTC)
  workflow_dispatch: {}

jobs:
  run:
    runs-on: ubuntu-latest
    timeout-minutes: 12
    concurrency:
      group: watchdog-monitor
      cancel-in-progress: true
    permissions:
      contents: write   # push runs/index.json + screenshots

    env:
      REPO: ${{ github.repository }}
      REF: ${{ github.ref }}
      BRANCH_NAME: ${{ github.ref_name }}
      TOKEN: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - name: Checkout (no external actions)
        run: |
          set -e
          rm -rf repo
          mkdir repo
          cd repo
          git init
          git config --global advice.detachedHead false
          git remote add origin "https://x-access-token:${TOKEN}@github.com/${REPO}.git"
          git fetch --depth=1 origin "${REF}"
          git checkout -f FETCH_HEAD
          echo "Checked out ${REPO}@${REF} into $(pwd)"
          ls -la

      - name: Install Node 20 (no external actions)
        working-directory: repo
        run: |
          set -e
          curl -fsSL https://deb.nodesource.com/setup_20.x | sudo -E bash -
          sudo apt-get install -y nodejs
          node -v
          npm -v

      - name: Install deps & Playwright
        working-directory: repo
        run: |
          set -e
          npm ci || npm i
          npx playwright install --with-deps

      - name: Build
        working-directory: repo
        run: npx tsc

      - name: Run monitor
        working-directory: repo
        env:
          STORE_URL: ${{ secrets.STORE_URL }}
          PRODUCT_URL: ${{ secrets.PRODUCT_URL }}
          ADD_TO_CART_SELECTOR: ${{ secrets.ADD_TO_CART_SELECTOR }}
          CART_DRAWER_SELECTOR: ${{ secrets.CART_DRAWER_SELECTOR }}
          CART_PAGE_SELECTOR: ${{ secrets.CART_PAGE_SELECTOR }}
          CART_VERIFY_SELECTOR: ${{ secrets.CART_VERIFY_SELECTOR }} # legacy
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          RUN_BRANCH: ${{ github.ref_name }}
        run: node dist/monitor.js

      - name: Persist run log (commit runs + screenshots)
        if: always()
        working-directory: repo
        run: |
          set -e
          echo "=== After agent ==="
          test -f runs/index.json && head -n 50 runs/index.json || echo "runs/index.json missing"
          echo "=== List screenshots dir ==="
          mkdir -p screenshots
          ls -la screenshots || true

          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

          # Update branch and stage changes
          git pull --rebase origin "${BRANCH_NAME}" || true

          # Stage BOTH logs and images (force-add PNGs even if .gitignore exists)
          git add -A runs/index.json
          git add -A screenshots
          git add -f screenshots/*.png 2>/dev/null || true

          echo "=== Diff to be committed ==="
          git diff --staged --name-status || true

          git commit -m "chore: persist monitor run & screenshots [skip ci]" || echo "No changes to commit"
          git push origin HEAD:"${BRANCH_NAME}"

      - name: Update heartbeat (last monitor run UTC)
        if: always()
        working-directory: repo
        run: |
          set -e
          mkdir -p runs
          date -u +"%Y-%m-%dT%H:%M:%SZ" > runs/heartbeat.txt

          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add runs/heartbeat.txt
          git commit -m "chore: update heartbeat [skip ci]" || true
          git push origin HEAD:"${BRANCH_NAME}"
